/*
 * Aplikacja
 *
 * Społecznościowy system informowania o cenach paliw. 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using WebApplication2.Models;

namespace WebApplication2.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AuthorizationApiController : ControllerBase
    { 
        /// <summary>
        /// Log in and get a token
        /// </summary>
        /// <remarks> endpoint logowania - otwarcie strony logowania</remarks>
        /// <param name="login">Dane użytkownika</param>
        /// <response code="200">successful login operation</response>
        /// <response code="405">Invalid input</response>
        [HttpPost]
        [Route("/login")]
        [ValidateModelState]
        public virtual IActionResult Login([FromBody]Login login)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405);

            string exampleJson = null;
            exampleJson = "aeiou";
            exampleJson = "{\n  \"bytes\": [],\n  \"empty\": true\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// log out
        /// </summary>
        /// <remarks> endpoint wylogowania</remarks>
        /// <param name="token">token sesji</param>
        /// <response code="200">Sucessfull operation </response>
        [HttpDelete]
        [Route("/logout")]
        [ValidateModelState]
        public virtual IActionResult Logout([FromQuery][Required()]string token)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }
    }
}
